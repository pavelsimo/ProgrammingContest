#include <algorithm>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <deque>
#include <numeric>
#include <iterator>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <climits>
#include <sys/time.h>

using namespace std;

#define DEBUG(x) cout << #x << ": " << x << endl
#define sz(a) int((a).size())
#define all(x) (x).begin(),(x).end()
#define foreach(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)

const int MAXN = 1010;
int N;
vector<int> edges[MAXN];
bool seen[MAXN];

int dfs(int cur) {
   if(seen[cur]) 
      return 0;
   int res = 1;
   seen[cur] = true;
   for(int i = 0; i < sz(edges[cur]); ++i) {
      int nxt = edges[cur][i];
      if(cur == nxt) continue;
      res+=dfs(nxt);
   }
   return res;
}


int main(int argc, char *argv[]) {
   int a, res;
   while(cin >> N) {
      for(int i = 1; i <= N; ++i)
         edges[i].clear();
      for(int i = 1; i <= N; ++i) {
         cin >> a;
         edges[i].push_back(a); 
      }
      res = 0;
      for(int i = 1; i <= N; ++i) {
         memset(seen,false,sizeof(seen));
         res = max(res,dfs(i));
      }
      cout << min(res - 1, 2) << endl;
   }
   return 0;
}
/* @END_OF_SOURCE_CODE */


